{"ast":null,"code":"var _jsxFileName = \"/Users/emily/code/em3B/react-tutorial/side-effects/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useContext, useRef } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\nimport Input from \"../UI/Input/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  // state gauranteed to be the last available state\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'USER_BLUR') {\n    return {\n      value: state.value,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'PASSWORD_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === 'PASSWORD_BLUR') {\n    return {\n      value: state.value,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n  const authCtx = useContext(AuthContext);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  useEffect(() => {\n    // set timer so it only executes after 500 ms\n    const identifier = setTimeout(() => {\n      setFormIsValid(passwordIsValid && emailIsValid);\n    }, 500); // clean up function which runs before every new side effect function:\n\n    return () => {\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); // setFormIsValid(\n    //   event.target.value.includes('@') && passwordState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'PASSWORD_INPUT',\n      val: event.target.value\n    }); // setFormIsValid(\n    //   emailState.isValid && event.target.value.trim().length > 6\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: 'PASSWORD_BLUR'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (formIsValid) {\n      authCtx.onLogin(emailState.value, passwordState.value);\n    } else if (!emailIsValid) {\n      emailInputRef.current.activate();\n    } else {\n      passwordInputRef.current.activate();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"email\",\n        label: \"E-Mail\",\n        type: \"email\",\n        isValid: emailIsValid,\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        isValid: passwordIsValid,\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"m9M6+fO17SfmF42RHefQJq72fRg=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","useContext","useRef","Card","classes","Button","AuthContext","Input","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","authCtx","emailInputRef","passwordInputRef","emailIsValid","passwordIsValid","identifier","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","current","activate","login","actions","btn"],"sources":["/Users/emily/code/em3B/react-tutorial/side-effects/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect, useReducer, useContext, useRef } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\nimport Input from \"../UI/Input/Input\";\n\nconst emailReducer = (state, action) => {\n  // state gauranteed to be the last available state\n  if (action.type === 'USER_INPUT') {\n    return { value: action.val, isValid: action.val.includes('@') };\n  } if (action.type === 'USER_BLUR') {\n    return { value: state.value, isValid: action.val.includes('@') };\n  }\n  return { value: '', isValid: false }\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'PASSWORD_INPUT') {\n    return { value: action.val, isValid: action.val.trim().length > 6 };\n  } if (action.type === 'PASSWORD_BLUR') {\n    return { value: state.value, isValid: action.val.trim().length  > 6};\n  }\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n\n  const authCtx = useContext(AuthContext);\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n\n  useEffect(() => {\n    // set timer so it only executes after 500 ms\n    const identifier = setTimeout(() => {\n      setFormIsValid(\n        passwordIsValid && emailIsValid\n      );\n    }, 500);\n\n    // clean up function which runs before every new side effect function:\n    return () => {\n      clearTimeout(identifier);\n    };\n    }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({type: 'USER_INPUT',val: event.target.value});\n\n    // setFormIsValid(\n    //   event.target.value.includes('@') && passwordState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({type: 'PASSWORD_INPUT', val: event.target.value});\n\n    // setFormIsValid(\n    //   emailState.isValid && event.target.value.trim().length > 6\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: 'PASSWORD_BLUR'\n    });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (formIsValid) {\n      authCtx.onLogin(emailState.value, passwordState.value);\n    } else if (!emailIsValid) {\n      emailInputRef.current.activate();\n    } else {\n      passwordInputRef.current.activate();\n    }\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input\n          id='email'\n          label='E-Mail'\n          type='email'\n          isValid={emailIsValid}\n          value={emailState.value}\n          onChange={emailChangeHandler}\n          onBlur={validateEmailHandler}\n        ></Input>\n        <Input\n          id='password'\n          label='Password'\n          type='password'\n          isValid={passwordIsValid}\n          value={passwordState.value}\n          onChange={passwordChangeHandler}\n          onBlur={validatePasswordHandler}\n        ></Input>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}