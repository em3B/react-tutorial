{"ast":null,"code":"var _jsxFileName = \"/Users/emily/code/em3B/react-tutorial/side-effects/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // infinite loop would be created by conditional below, so use useEffect\n\n  useEffect(() => {\n    const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn');\n\n    if (storedUserLoggedInInformation === '1') {\n      setIsLoggedIn(true);\n    }\n\n    ;\n  }, []);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    // data storage for web, 1 is set for logged in:\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler,\n      onLogin: loginHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AuthContextProvider, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","useEffect","AuthContext","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvider","props","setIsLoggedIn","storedUserLoggedInInformation","localStorage","getItem","loginHandler","setItem","logoutHandler","removeItem","children"],"sources":["/Users/emily/code/em3B/react-tutorial/side-effects/src/store/auth-context.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst AuthContext = React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {}\n});\n\nexport const AuthContextProvider = (props) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // infinite loop would be created by conditional below, so use useEffect\n\n  useEffect(() => {\n    const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn');\n\n    if (storedUserLoggedInInformation === '1') {\n      setIsLoggedIn(true);\n    };\n  }, []);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n\n    // data storage for web, 1 is set for logged in:\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  return <AuthContext.Provider value={{\n    isLoggedIn: isLoggedIn,\n    onLogout: logoutHandler,\n    onLogin: loginHandler}}>\n\n    {props.children}\n    </AuthContext.Provider>;\n};\n\nexport default AuthContext;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;EACtCC,UAAU,EAAE,KAD0B;EAEtCC,QAAQ,EAAE,MAAM,CAAE,CAFoB;EAGtCC,OAAO,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB,CAAE;AAHM,CAApB,CAApB;AAMA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;EAAA;;EAC5C,MAAM,CAACN,UAAD,EAAaO,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C,CAD4C,CAG5C;;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMW,6BAA6B,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAtC;;IAEA,IAAIF,6BAA6B,KAAK,GAAtC,EAA2C;MACzCD,aAAa,CAAC,IAAD,CAAb;IACD;;IAAA;EACF,CANQ,EAMN,EANM,CAAT;;EAQA,MAAMI,YAAY,GAAG,CAACR,KAAD,EAAQC,QAAR,KAAqB;IACxC;IACA;IAEA;IACAK,YAAY,CAACG,OAAb,CAAqB,YAArB,EAAmC,GAAnC;IACAL,aAAa,CAAC,IAAD,CAAb;EACD,CAPD;;EASA,MAAMM,aAAa,GAAG,MAAM;IAC1BJ,YAAY,CAACK,UAAb,CAAwB,YAAxB;IACAP,aAAa,CAAC,KAAD,CAAb;EACD,CAHD;;EAKA,oBAAO,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAClCP,UAAU,EAAEA,UADsB;MAElCC,QAAQ,EAAEY,aAFwB;MAGlCX,OAAO,EAAES;IAHyB,CAA7B;IAAA,UAKJL,KAAK,CAACS;EALF;IAAA;IAAA;IAAA;EAAA,QAAP;AAOD,CAlCM;;GAAMV,mB;;KAAAA,mB;AAoCb,eAAeP,WAAf"},"metadata":{},"sourceType":"module"}